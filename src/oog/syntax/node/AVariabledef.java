/* This file was generated by SableCC (http://www.sablecc.org/). */

package oog.syntax.node;

import oog.syntax.analysis.*;

@SuppressWarnings("nls")
public final class AVariabledef extends PVariabledef
{
    private TVar _var_;
    private TIdent _ident_;
    private TVisibility _visibility_;
    private TNum _min_;
    private TNum _max_;
    private TNum _default_;

    public AVariabledef()
    {
        // Constructor
    }

    public AVariabledef(
        @SuppressWarnings("hiding") TVar _var_,
        @SuppressWarnings("hiding") TIdent _ident_,
        @SuppressWarnings("hiding") TVisibility _visibility_,
        @SuppressWarnings("hiding") TNum _min_,
        @SuppressWarnings("hiding") TNum _max_,
        @SuppressWarnings("hiding") TNum _default_)
    {
        // Constructor
        setVar(_var_);

        setIdent(_ident_);

        setVisibility(_visibility_);

        setMin(_min_);

        setMax(_max_);

        setDefault(_default_);

    }

    @Override
    public Object clone()
    {
        return new AVariabledef(
            cloneNode(this._var_),
            cloneNode(this._ident_),
            cloneNode(this._visibility_),
            cloneNode(this._min_),
            cloneNode(this._max_),
            cloneNode(this._default_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariabledef(this);
    }

    public TVar getVar()
    {
        return this._var_;
    }

    public void setVar(TVar node)
    {
        if(this._var_ != null)
        {
            this._var_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._var_ = node;
    }

    public TIdent getIdent()
    {
        return this._ident_;
    }

    public void setIdent(TIdent node)
    {
        if(this._ident_ != null)
        {
            this._ident_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ident_ = node;
    }

    public TVisibility getVisibility()
    {
        return this._visibility_;
    }

    public void setVisibility(TVisibility node)
    {
        if(this._visibility_ != null)
        {
            this._visibility_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._visibility_ = node;
    }

    public TNum getMin()
    {
        return this._min_;
    }

    public void setMin(TNum node)
    {
        if(this._min_ != null)
        {
            this._min_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._min_ = node;
    }

    public TNum getMax()
    {
        return this._max_;
    }

    public void setMax(TNum node)
    {
        if(this._max_ != null)
        {
            this._max_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._max_ = node;
    }

    public TNum getDefault()
    {
        return this._default_;
    }

    public void setDefault(TNum node)
    {
        if(this._default_ != null)
        {
            this._default_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._default_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._var_)
            + toString(this._ident_)
            + toString(this._visibility_)
            + toString(this._min_)
            + toString(this._max_)
            + toString(this._default_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._var_ == child)
        {
            this._var_ = null;
            return;
        }

        if(this._ident_ == child)
        {
            this._ident_ = null;
            return;
        }

        if(this._visibility_ == child)
        {
            this._visibility_ = null;
            return;
        }

        if(this._min_ == child)
        {
            this._min_ = null;
            return;
        }

        if(this._max_ == child)
        {
            this._max_ = null;
            return;
        }

        if(this._default_ == child)
        {
            this._default_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._var_ == oldChild)
        {
            setVar((TVar) newChild);
            return;
        }

        if(this._ident_ == oldChild)
        {
            setIdent((TIdent) newChild);
            return;
        }

        if(this._visibility_ == oldChild)
        {
            setVisibility((TVisibility) newChild);
            return;
        }

        if(this._min_ == oldChild)
        {
            setMin((TNum) newChild);
            return;
        }

        if(this._max_ == oldChild)
        {
            setMax((TNum) newChild);
            return;
        }

        if(this._default_ == oldChild)
        {
            setDefault((TNum) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
